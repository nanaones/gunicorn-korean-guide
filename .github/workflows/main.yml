# This is a basic workflow to help you get started with Actions

name: CI / CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:     
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
        working-directory: ./gunicorn-guide 
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2        
      - name: NodeJS Action Template
        # You may pin to the exact commit or the version.
        # uses: bitoiu/node-js-action-template@a113bdf459ab942f94e8f4981cfbfb814c8aad90
        uses: bitoiu/node-js-action-template@v1.0

      - name: npm/yarn/pnpm install
        # You may pin to the exact commit or the version.
        # uses: Jaid/action-npm-install@9483da054882538350947c4147de4c8adbf0d597
        uses: Jaid/action-npm-install@v1.2.4
        with:
          # NODE_ENV setting for installing execution (affects the amount of dependencies installed, but I would recommend keeping development in any case).
          nodeEnv: development
          # Can be "npm", "yarn", "pnpm" or "auto". "auto" will determine the package manager by looking into the repo's files. This is very accurate, so you normally don't want to change this.
          packageManager: yarn

      # Runs a set of commands using the runners shell
      - name: Pre-install
        run: yarn global add hexo-cli
            
      - name: Build
        run: yarn build
        working-directory: ${{env.working-directory}}

      - name: Release build
        uses: hpcodecraft/action-deploy-workspace-to-repo@v2.2
        env:
          GITHUB_ACCESS_TOKEN: ${{secrets.GIT_TOKEN}}
          SRC_FOLDER:  ${{env.working-directory}}/public
          DEST_OWNER: nanaones
          DEST_REPO: nanaones.github.io
          DEST_BRANCH: master
          DEST_FOLDER: /
